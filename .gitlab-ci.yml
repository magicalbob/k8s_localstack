stages:
 - test
 - scan

variables:
  SONAR_SCANNER_VERSION: 4.8.0.2856
  GIT_DEPTH: "0"

test_job:
  stage: test
  tags:
    - linux
  script:
    - sudo apt-get update
    - sudo rm -rf /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/cache/debconf/*.dat /var/cache/apt/archives/lock
    - sudo dpkg --configure -a
    - sudo apt-get install -f
    - sudo apt-get install -y python3-dev python3-pip libasound2-dev
    - pip install -r requirements.txt
    - cd localstack_ui
    - ~/.local/bin/coverage run -m unittest app_unittest.py
    - ~/.local/bin/coverage xml
    - rm -rf __pycache__
  artifacts:
    paths:
      - localstack_ui/coverage.xml
  variables:
    GIT_STRATEGY: clone

scan_job:
  stage: scan
  tags:
    - linux
  script:
    - sudo apt-get update
    - sudo rm -rf /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/cache/debconf/*.dat /var/cache/apt/archives/lock
    - sudo dpkg --configure -a
    - sudo apt-get install -f
    - sudo apt-get install -y unzip default-jre npm
    - pushd ~
    - curl -o /tmp/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
    - unzip -n /tmp/sonar-scanner.zip
    - popd
    - cd localstack_ui
    - ~/sonar-scanner-${SONAR_SCANNER_VERSION}/bin/sonar-scanner
  dependencies:
    - test_job
  artifacts:
    paths:
      - localstack_ui/coverage.xml
  variables:
    GIT_STRATEGY: clone

